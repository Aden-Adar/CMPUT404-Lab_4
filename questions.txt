Question 1: What is the link to your github repository for this lab?
- https://github.com/Aden-Adar/CMPUT404-Lab_4

Question 2: After starting a brand new Django application and running the runserver command, what does the browser show you?
- "The install worked successfully! Congratulations!" page

Question 3: After creating the first view within polls, what does the browser show you when navigating to / and to /polls respectively?
- 404 (for /)
- unordered list of questions (for /polls)

Question 4: What is a Django migration and why do we need them?
- Handles changes in the db. it is used to update the database schema

Question 5: What do you see after you log into the Django adminstration site? From a high level, how do you get custom models to appear in the Django admin page?
- For ex. if you want to get custom model for Question do this; admin.site.register(Question)

Question 6: What do you see when you go to /polls/38/ in your browser? What about /polls/38/results and /polls/38/vote? What happens when you donâ€™t put a number, and instead use a string? How would you modify the urls.py file to allow arbitrary alphabetic characters?
- You're looking at question 38 (for /polls/38/)
- You're looking at the results of question 38 (for /polls/38/results)
- You're voting on question %s.(for /polls/38/vote)

Question 7: Why is it a bad idea to hardcode urls into the templates?
- Harder to maintain as your codebase get large

Question 8: What are the benefits of using Django's generic views over writing views 'the hard way'? When should you use a generic view and when shouldn't you use a generic view?
- you can quickly write common views of data without having to write too much code. It's used to reduce boilerplate code when you repeatedly use similar code in several views.
